#!/usr/bin/env python3
import asyncio
from grader.tcp import Servidor
import re


def validar_nome(nome):
    return re.match(br'^[a-zA-Z][a-zA-Z0-9_-]*$', nome) is not None


def sair(conexao):
    print(conexao, 'conexão fechada')
    conexao.fechar()


def dados_recebidos(conexao, dados):
    if dados == b'':
        return sair(conexao)
    print(conexao, dados)
    #Teste 1
    def dados_recebidos(conexao, dados):
    if dados == b'':
    parts = dados.split(b' ')
    if  parts[0] == b'PING':
        conexao.enviar(b':server PONG server :' + dados.split(b' ',1)[1])
    elif parts[0] == b'NICK':
        print(b"oi")
        nick = parts[1]
        if not(validar_nome(nick)):
            conexao.enviar(b':server 432 * %s :Erroneous nickname\r\n' % nick)
        else:
            conexao.enviar(b':server 001 %s :Welcome\r\n' % nick)
            conexao.enviar(b':server 422 %s :MOTD File is missing\r\n' % nick)
    else:
        return sair(conexao)
    print(conexao, dados)

    

def conexao_aceita(conexao):
    print(conexao, 'nova conexão')
        return conexao.enviar(msg)

def conexao_aceita(conexao):
    print(conexao, 'nova conexão')
    conexao.registrar_recebedor(dados_recebidos)


servidor = Servidor(6667)
servidor.registrar_monitor_de_conexoes_aceitas(conexao_aceita)
asyncio.get_event_loop().run_forever()
